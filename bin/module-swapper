#!/usr/bin/env node
var argv = require('yargs').argv

var dirname
if (argv._[0]) {
  dirname = argv._[0]
} else if (argv.diff && argv.diff !== true) {
  dirname = argv.diff
} else {
  dirname = process.cwd()
}

var modules = {
  'Backbone': 'backbone',
  '$': 'jquery',
  'jQuery': 'jquery',
  'moment': 'moment',
  '_': 'underscore',
  'Marionette': 'marionette',
  'accounting': 'accounting',
  'Handlebars': 'handlebars',
  'Highcharts': 'highcharts',
  'Backgrid': 'backgrid',
  'numeral': 'numeral',
  'Raven': 'raven',
  'React': 'react',
  'ga': 'ga',
  'FB': 'facebook',
  'crossfilter': 'crossfilter',
  'd3': 'd3',
  'dc': 'dc'
}

var globals = {
  'sessionStorage': true,
  'document': true,
  'window': true,
  'localStorage': true,
  'location': true,
  'undefined': true,
  'FileReader': true,
  /* UMD */
  'define': true,
  /* Advisor */
  'Helpers': true
}

if (argv.inline) {
  var dirty = require('child_process').execSync('git status --porcelain')
  if (String(dirty).length > 0) {
    console.warn('You have unstaged changes, refusing to run inline replacements. Please commit your work before running with --inline or run with --diff for diff.')
    process.exit(0)
  }
}

var logger = require('debug')('module-swapper')
if (argv.verbose) {
  logger = console.log
}

require('../index.js')({
  dir: dirname,
  extensions: null,
  loader: null,
  modules: modules,
  falafelOpts: null,
  logger: logger,
  replaceInline: false,
  globals: globals,
  replaceInline: argv.inline,
  // fileFilter: /(\/app|backgrid\/cells|language)/
}, function(err, files, inFiles) {
  if (err) throw err
  if (argv.diff) {
    require('../diff')(inFiles, files, dirname)
  }
})
